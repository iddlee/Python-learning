一：Shell简介
    Linux操作系统由内核(Kernel)、外壳(Shell)、实用工具组成。
    其中，shell是用户与内核之间的“桥梁”。
    Shell从交互即时性分为两种：交互式Shell（即时解释命令，反馈给用户）;
                               脚本Shell(将一组命令写入一个脚本，一起执行)

二：Shell的变量类型
    1.  环境变量
        系统启动后，已经存在的变量。可使用set命令查看，eg: PWD、UID、PATH...

    2.  自定义变量
        由用户自己定义的变量，定义格式：  变量名=变量值
        注意：定义变量时，等号两边不能有空格;
              引用变量时，在变量名前面加上$
              所有变量值都是字符串类型

              eg: name="tom"
                  echo $name

    3.  预定义变量(以$符号开头)
        $?  用来判断"前一条命令"是否执行成功，如果成功返回0
        $1、$2、....    存储第一个、第二个...位置参数的值
        $*   存储的是所有位置参数的值
        $#   存储的是位置参数的个数

三：Shell的编写与执行
    第一行：#!/bin/sh或#!/bin/bash等解释器
    
    执行Shell脚本的方式：
           方式一：sh 文件名 （或bash 文件名）
           方式二：通过source执行：  source 文件名
           方式三：直接执行，必须设置执行权限

四：Shell的流程控制
    1. if结构
       if [ 条件判断表达式 ]
       then
           条件表达式为真，执行此处
       else
           条件表达式为假，执行此处
       fi

       注意：还有if ..then..elif..then...else多分支结构

    补充：判断表达式中，判断文件 -f   判断目录 -d   判断是否存在 -e

    2. case结构
       case 表达式  in
       匹配表达式1)   # 当表达式=匹配表达式时
            执行表达式1对应的代码（执行此处代码）
            ;;
       匹配表达式2)
            执行表达式2对应的代码（执行此处代码）
            ;;

       ....
       *)
            如果前面的表达式都未匹配，则执行此处代码
            ;;
       esac

    3. for循环结构
       for 循环变量 in 表达式
       do
           循环体执行的代码
       done

    4. while循环结构
       while [ 条件判断表达式 ]
       do
          循环体执行的代码
       done

五：Shell的函数
    格式：
    函数名()
    {
       函数体代码  
    }

    调用函数：
    函数名 [位置参数1 位置参数2...]

六：定时任务
    1.每个用户都有自己的定时任务文件，操作定时任务文件的命令是crontab。
    crontab命令的常用选项有：
    -e   编辑当前用户的定时任务文件
    -r   删除当前用户的定时任务
    -l   显示当前用户的定时任务

    还有一种简便方法编辑定时任务文件：
    编写一个文件(temp.txt)，在该文件中按照格式写入定时任务，使用命令：
    crontab 文件 (crontab temp.txt)会自动将该文件中的定时任务写入当前用户的
    定时任务文件中。

    定时任务举例：
    m h  dom mon dow   command

    */2 * * * * date >> ~/test/mylog.txt

    2.如果要修改其他用户的定时任务文件，则需要提升为root权限，并在crontab命令
      中使用-u选项：sudo crontab -u 其他用户名 -e

    3.几个与定时任务相关的目录     
      /etc/cron.hourly/    该目录下的脚本会每小时都会执行
      /etc/cron.daily/     该目录下的脚本会每天都会执行
      /etc/cron.weekly/    该目录下的脚本会每周都会执行
      /etc/cron.monthly/   该目录下的脚本会每月都会执行

    4.如果要执行的定时任务需要以root用户的权限执行，应该
      编辑/etc/crontab文件，该文件的定时任务字段中多了一个
      "user"字段，设置定时任务时只要将user字段设置为"root",
      就可以使用root权限执行定时任务了。

      补充：systemctl status ssh  查看ssh服务的状态
            systemctl start ssh 启动ssh服务
            systemctl restart ssh 重启ssh服务
            systemctl stop ssh 关闭ssh服务



    
             

    
        