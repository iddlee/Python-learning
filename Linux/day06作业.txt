1.创建一个分支bra,并切换到该分支，创建一个文件，
  然后使用master分支合并该分支上的操作。

git branch bra   创建一个分支bra
git checkout bra   切换到该分支
touch d.txt   创建一个文件
git add d.txt   将d.txt添加到暂存区
git commit -m "ddd"   将d.txt提交到当前分支
git checkout master   切换到master分支
git merge bra   合并bra分支
git log --pretty=oneline   查看提交日志

2.在master分支上提交三次，然后回退到第一次的状态，要求修改工作区和暂存区的内容。
touch a.txt   创建a.txt
git add a.txt   将a.txt添加到暂存区
git commit -m "aaa"   将a.txt提交到当前分支
cat >> a.txt  qwert   给a.txt追加内容
git add a.txtp   将a.txt添加到暂存区
git commit -m "2"   将a.txt提交到当前分支
cat >> a.txt  asdfg   给a.txt追加内容
git add a.txt   将a.txt添加到暂存区
git commit -m "3"   将a.txt提交到当前分支
git reset --hard 42930   回退到第一次的状态


3.在工作区创建两个文件a.txt和b.txt,将这两个文件都添加到暂存区，然后又将a.txt
  从暂存区撤销。

touch a.txt   创建文件a.txt
touch b.txt   创建文件b.txt
git add a.txt b.txt   将a.txt、b.txt添加到暂存区
/git add .
git reset HEAD a.txt   撤销暂存
/git reset -- a.txt

4.如果在工作区中编辑一个文件，并将其加入暂存区，然后又进行修改，现在要求将工作
  区的内容还原成未修改时的状态，如何操作？（可考虑使用git checkout 的另一种用法）
   git checkout -- filename

touch aa.txt   创建文件aa.txt
git add aa.txt   将aa.txt添加到暂存区
git checkout -- aa.txt   将工作区的内容还原成未修改时的状态

